@using RozkladyBackend.Models
@model LoginViewModel
@{
    ViewBag.Title = "Zaloguj się";
}

<div class="row">
    <div class="col-md-4 col-md-offset-4">
        <h4>Backend</h4>
        <hr />
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form", role = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "e-mail" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Hasło" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>

                <div class="form-group text-center">
                    @Html.ActionLink("Rejestracja", "Register", null, new { @Class = "btn btn-default" })
                    <input type="submit" value="Zaloguj się" class="btn btn-success" />
                </div>
            }
        </section>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}